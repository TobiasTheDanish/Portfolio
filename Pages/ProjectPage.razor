@page "/Projects/{Id:int}"

@using BlazorWasmTest.Models
@inject HttpClient client

<div class="content-wrapper ">
    <div class="title-bg">
        <h3 class="title">@Project?.Name</h3>
    </div>
    <div class="tags">
        @foreach (var tag in Project?.Tags ?? new String[0])
        {
            <div class="tag">@tag</div>
        }
    </div>
    <p class="description">
        @for (int i = 0; i < descriptionSections?.Length; i++)
        {
            string[] descriptionWords = descriptionSections[i].Split(' ');
            <div class="description-section">
                @for (int w = 0; w < descriptionWords.Length; w++)
                {
                    string delayMs = $"{i * 40}ms";
                    <span class="description-word" style="transition-delay: @delayMs; opacity: @wordOpacity;">@descriptionWords[w]</span>
                }
            </div>
        }
    </p>
    <div class="img-container">
        @for (int i = 0; i < Project?.Images?.Length; i++)
        {
            string imgpath = $"{Project.Images[i]}";
            <img class="item-img" src="~/data/projectImages/@imgpath"/>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public ProjectModel? Project { get; set; }

    private string[]? descriptionSections;
    int wordOpacity = 0;

    protected override async Task OnInitializedAsync()
    {
        var projectModels = await client.GetFromJsonAsync<List<ProjectModel>>("data/ProjectModels.json");

        Project = projectModels?[Id];
        descriptionSections = Project?.Description?.Split("\n") ?? new string[0];
    }

    protected override void OnParametersSet()
    {
        wordOpacity = 1;
    }
}
