@inherits LayoutComponentBase

@inject IJSRuntime JS

<div class="page">
<!--
<div class="sidebar">
        <NavMenu />
    </div>
-->
        
    <main class="dark gradient-bg">
        <div id="tiles" style="--columns:@columns; --rows:@rows;">
            @for (int i = 0; i < rows; i++)
            {
                @for (int j = 0; j < columns; j++)
                {
                    string animDelay = $"{(j) * 250}ms";
                    <div class="tile" style=" --animDelay: @animDelay;"></div>
                }
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>



@code {
    int columns;
    int rows;

    protected override async Task OnParametersSetAsync()
    {
        var objRef = DotNetObjectReference.Create(this);
        await JS.InvokeVoidAsync("setDotNetRef", objRef);

        await CalcColumnsAndRows();
    }

    [JSInvokable("CalcColsAndRows")]
    public async Task CalcColumnsAndRows()
    {
        int currentColumns = this.columns;
        int currentRows = this.rows;

        var dimension = await JS.InvokeAsync<WindowDimension>("getWindowDimensions");

        int size = dimension.Width > 800 ? 100 : 50;

        this.columns = dimension.Width / size;
        this.rows = dimension.Height / size;

        if (this.columns != currentColumns || this.rows != currentRows)
        {
            StateHasChanged();
        }
    }

    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }
}